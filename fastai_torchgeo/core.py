# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['load_tif']

# %% ../nbs/00_core.ipynb 4
import rasterio as rio
import typing
import numpy as np

# %% ../nbs/00_core.ipynb 5
def load_tif(fpath:str, # fileurosat 
               chnls_last:typing.Optional[bool]=True, # transpose from c,h,w to h,w,c (assume c,h,w on rio.read input)
               ) -> np.ndarray: # ndarray will either h,w,c or c,h,w depending on chnls_last is True or False
    """
    Load tif function documentation
    
    The `load_tif` function is designed to load a geotiff from a file, transpose its channels if necessary, and return the image data as a NumPy array.
    
    ## Parameters
    
    - `fpath` (str): The file path of the image to be loaded.
    - `chnls_last` (bool, optional): If set to `True`, the function will return the image data in the format (height, width, channels) (h, w, c). If set to `False`, the function will return the image data in the format (channels, height, width) (c, h, w). Default value is `True`.
    
    ## Returns
    
    - `numpy.ndarray`: The image data as a NumPy array. The shape of the array depends on the value of `chnls_last`.
      - If `chnls_last` is `True`, the returned array will have the shape `(height, width, channels)`.
      - If `chnls_last` is `False`, the returned array will have the shape `(channels, height, width)`.
    """
    with rio.open(fpath) as src:
        data = src.read()
    if chnls_last:
        return data.transpose([1,2,0]) # return as h,w,c
    return data
